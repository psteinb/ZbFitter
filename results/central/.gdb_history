file /amnt/remote/pkthafc.home/psteinb/development/sandbox/fitter/bin/Linux26SL6_x86_64_gcc444/5.28.00b/RunFitter.exe
r -M Migrad -d /home/psteinb/development/sandbox/fitter/AlpgenZmumuJetVertexMassByFlav.root -c /amnt/remote/pkthafc.home/psteinb/development/sandbox/fitter/results/central/BinnedEML.Alpgen.env -D Data -T MC_Signal_B,MC_Signal_C,MC_Signal_L -o results.alpgen -r 10 -m 1
b FitCore.icc:80
r
s
n
print strategy
n
print prev_level
n
print Precision()
print *(Precision())
n
s
n
s
n
break ROOT
break /scratch/users/ROOT/v5.28.00b_dbg/math/minuit2/src/Minuit2Minimizer.cxx:339
r
c
s
n
r
c
s
n
r
delete 1
c
s
n
s
n
s
n
s
n
print fcn.Up()
graph display seed
graph display *seed
graph display *(&seed) dependent on 1
n
print seed
print seed.fData
print seed.fData.fPtr
print *(seed.fData.fPtr)
s
n
print s0
print s0.Error()
n
break /scratch/users/ROOT/v5.28.00b_dbg/math/minuit2/src/VariableMetricBuilder.cxx:246
r
c
print s0.Parameters()
print fcn
print s0
print step
print gdel
print prec
print s0
print *s0
ptype s0
quit
r
r 
b BinnedEML.cc:47
r
n
c
print getParameters()
print this->getParameters()
print *(this->getParameters())
info b
r
help printf
l
n
print "%f, %s" sumOfParameters *(getParameters())
print "%f, %s" sumOfParameters (getParameters())
print "%f, %s" sumOfParameters (m_parameters)
print this->m_parameters
print "%f, %s" sumOfParameters (this->m_parameters)
print "%f" sumOfParameters
help printf
print "%f", sumOfParameters
print "%f, %s", sumOfParameters (this->m_parameters)
print "%f, %f", sumOfParameters (this->m_parameters)
print "%f, %d", sumOfParameters (this->m_parameters)
print "%f, %x", sumOfParameters (this->m_parameters)
c
continue && print this->m_parameters
continue && print this->m_parameters
info b
commands 1
print this->m_parameters
end
c
n
print sumOfParameters
n
print logLHValue
n
r
c
n
print sumOfParameters
n
b BinnedEML.cc:62
command 2
printf "[%i] %d, %d x %d", bin sumOverAllBins (*dataItr) this->getLogTerm(bin)
end
c
printf "[%i] %d, %d x %d", bin sumOverAllBins (*dataItr) this->getLogTerm(bin)
printf "[%i] %d, ", bin sumOverAllBins 
printf "[%i] %d, ", bin,sumOverAllBins 
command 2
printf "[%i] %d, %d x %d\n", bin, sumOverAllBins, (*dataItr), this->getLogTerm(bin)
end
c
print sumOverAllBins
r
disable 2
c
enable 2
c
print sumOverAllBins
print dataItr
print *dataItr
print bin
print getLogTerm(bin)
s
n
print getLogTerm(bin)
print bin
print dataItr
n
print bin
print print sumOverAllBins
print sumOverAllBins
n
r
r
r
bt
b core::MinimizerConfiguration::determineItemsFromMap
b core::MinimizerConfiguration::loadItemsFromMap
r
n
print endItem
print mItr->first
print mItr
n
print mItr
n
print mItr
n
print mItr
n
print mItr
n
print endItem
n
print subString 
n
print metaNames
n
n 5
print metaNames
n
print metaNames.size()
n
print m_names
b core::MinimizerConfiguration::loadItemsFromMap
b core::MinimizerConfiguration::determineItemsFromMap
r
n
c
print m_names
c
r
r
bt
r
bt
r
r
r
r
bt
.q
r
bt
r
bt
b AbsFittingFunction.cc:55
r
r
bt
b functions::BinnedEML::operator()
r
n
print this->getParameters()->size()
b functions::AbsFittingFunction::setupFromInput
r
n
n
print m_input.size()
r
r
r
b FitterResults::LLHPValue::calculate()
r
l
n
print minValue
n
print lowBound
print highBound
b FitterResults::LLHPValue::integrationBoundsForMaxLLH
r
c
n
print diff
print maxBin
print m_maxLLH->Print("all")
b FitterResults::LLHPValue::integrationBoundsForMaxLLH
r
l
n
print maxBin
n
print diff
n
print _low
n
print _high
n
print m_pValue
del 
r
b FitterResults::LLHPValue::calculate
b FitterResults::LLHPValue::calculate()
r
n
print lowIntErr
print highIntErr
n
print m_pValueError
b FitterResults::LLHPValue::calculate()
r
n
print m_maxLLH->Print("all")
print m_maxLLH->GetBinError(m_maxLLH->GetMaximumBin())
print m_maxLLH->GetBinContent(m_maxLLH->GetMaximumBin())
r
b FitterResults::LLHPValue::calculate()
r
n
print lowInt
b FitterResults::LLHPValue::calculate()
r
c
r
bt
r
r
bt
r
r
r
b FitterResults::Chi2Result::calculate()
r
n
print m_inputHistos[0]
print m_inputHistos[0]->Print("all")
.q
r
r
r
r
r
r
l
r
r
r
bt 
r
bt
r
r
r
bt
